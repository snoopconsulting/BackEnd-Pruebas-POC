<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mulerequester="http://www.mulesoft.org/schema/mule/mulerequester" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mulerequester http://www.mulesoft.org/schema/mule/mulerequester/current/mule-mulerequester.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd">
    <flow name="C8_Sync">
        <file:inbound-endpoint path="${inputFolder}/c8/" pollingFrequency="30000" responseTimeout="10000" doc:name="Read File Sync"/>
        <dw:transform-message doc:name="Transform to Java Array" metadata:id="b3390d3a-f405-4341-8c25-84217d9b9478">
            <dw:input-payload mimeType="application/csv"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	code: payload01.code,
	price: payload01.price,
	origin: payload01.origin,
	destination: payload01.destination,
	departureDate: payload01.departureDate,
	airlineName: payload01.airlineName,
	planeType: payload01.planeType,
	emptySeats: payload01.emptySeats
})]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="C8_ForEachRecord_InvokeSOAP" doc:name="Flow Reference"/>
    </flow>
    <flow name="C8_Async">
        <poll doc:name="Poll">
            <schedulers:cron-scheduler expression="0 0/22 * 1/1 * ? *"/>
            <mulerequester:request resource="file://${inputFolder}/c8/${c2.filename}.csv?connector=file-connector-config" doc:name="Read CSV File"/>
        </poll>
        <dw:transform-message doc:name="Transform to Java Array">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload splitBy "\r\n" map {
	code: ($ splitBy ",")[0],
	price: ($ splitBy ",")[1],
	origin: ($ splitBy ",")[2],
	destination: ($ splitBy ",")[3],
	departureDate: ($ splitBy ",")[4],
	airlineName: ($ splitBy ",")[5],
	planeType: ($ splitBy ",")[6],
	emptySeats: ($ splitBy ",")[7]
} filter ($.code != "code")
]]></dw:set-payload>
            <dw:set-variable variableName="originalPayload"><![CDATA[%dw 1.0
%output application/csv
---
payload splitBy "\r\n" map {
	client_id: ($ splitBy ",")[0],
	client_name: ($ splitBy ",")[1],
	client_country: ($ splitBy ",")[2]
} filter ($.client_id != "client_id")]]></dw:set-variable>
        </dw:transform-message>
        <flow-ref name="C8_ForEachRecord_InvokeSOAP" doc:name="Flow Reference"/>

    </flow>
    <sub-flow name="C8_ForEachRecord_InvokeSOAP">
        <foreach collection="#[payload]" doc:name="For Each Record">
            <dw:transform-message doc:name="Generate SOAP Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: payload.destination
	}
}]]></dw:set-payload>
            </dw:transform-message>
            <ws:consumer config-ref="DeltaFlights_WSDL" operation="findFlight" doc:name="Invoke SOAP Service"/>
            <dw:transform-message doc:name="Transform Response" metadata:id="3f71ae3e-a0dc-43d7-aebc-59f85109523b">
                <dw:input-payload mimeType="application/xml"/>
                <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlightResponse: {
		(payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
			return: {
				airlineName: return.airlineName,
				code: return.code,
				departureDate: return.departureDate,
				destination: return.destination,
				emptySeats: return.emptySeats,
				origin: return.origin,
				planeType: return.planeType,
				price: return.price
			}
		}))
	}
}]]></dw:set-payload>
            </dw:transform-message>
            <logger message="#['\n==================================\n']RECORD #[flowVars.counter]: #['\n' + message.payloadAs(java.lang.String)]#['\n==================================\n']" level="INFO" doc:name="Log Response"/>
        </foreach>
    </sub-flow>

</mule>
